services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    hostname: backend
    volumes:
      - ./poker.db:/app/poker.db:rw
      - ./rooms_state.pickle:/app/rooms_state.pickle:rw
      - ./logs:/app/logs:rw
      - ./poker_server.log:/app/logs/poker_server.log:rw
      # Add source directory as a volume to allow modification
      - ./src:/app/src:rw
      # Add bug report images directory
      - ./bug_report_images:/app/bug_report_images:rw
    ports:
      - "8000:8000"  # 开放端口以便外部可直接访问
    environment:
      - SECRET_KEY=c32poker_secret_key  # 生产环境应修改为更安全的密钥
      - DB_PATH=poker.db  # 设置数据库路径环境变量
      - BUG_IMAGES_DIR=bug_report_images  # 设置Bug报告图片目录
    # 在容器内使用root用户
    user: "root"  
    command: >
      bash -c "
        mkdir -p /app/logs && 
        touch /app/logs/poker_server.log &&
        echo '数据库路径: /app/poker.db' &&
        ls -la /app/poker.db &&
        # Create database if not exists and ensure proper permissions
        touch /app/poker.db && 
        chmod 666 /app/poker.db /app/rooms_state.pickle &&
        chmod 666 /app/logs/poker_server.log &&
        chmod -R 777 /app/logs &&
        # 确保Bug报告图片目录存在并具有正确权限
        mkdir -p /app/bug_report_images &&
        chmod -R 777 /app/bug_report_images &&
        # 确保源代码目录具有正确权限
        chmod -R 755 /app/src &&
        # 执行数据库路径修复脚本
        /app/fix_db_path.sh &&
        # Set database file permission one more time to be sure
        chmod 666 /app/poker.db &&
        gunicorn --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker src.main:app
      "

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_API_URL=http://8.134.190.102:8000
        - REACT_APP_WS_URL=ws://8.134.190.102:8000
    restart: always
    ports:
      - "8888:80"  # 将宿主机的8888端口映射到容器的80端口
    depends_on:
      - backend

# 可选的持久化卷配置
volumes:
  db-data:
  game-state: 